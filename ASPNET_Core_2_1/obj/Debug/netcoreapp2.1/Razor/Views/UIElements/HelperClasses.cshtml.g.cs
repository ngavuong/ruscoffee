#pragma checksum "D:\RusCoffee\ASPNET_Core_2_1_Full_Project\ASPNET_Core_2_1\Views\UIElements\HelperClasses.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "59ebaa7caa9765fa9118ac4e2c70383978b024bd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UIElements_HelperClasses), @"mvc.1.0.view", @"/Views/UIElements/HelperClasses.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/UIElements/HelperClasses.cshtml", typeof(AspNetCore.Views_UIElements_HelperClasses))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\RusCoffee\ASPNET_Core_2_1_Full_Project\ASPNET_Core_2_1\Views\_ViewImports.cshtml"
using ASPNET_Core_2_1;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"59ebaa7caa9765fa9118ac4e2c70383978b024bd", @"/Views/UIElements/HelperClasses.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bf3ab1a3ff43760fcc2127914d0c3d050c712654", @"/Views/_ViewImports.cshtml")]
    public class Views_UIElements_HelperClasses : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Images/a4.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-circle img-md"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("rounded img-md"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-thumbnail img-md"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-sm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-md"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-lg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "D:\RusCoffee\ASPNET_Core_2_1_Full_Project\ASPNET_Core_2_1\Views\UIElements\HelperClasses.cshtml"
  
    ViewData["Title"] = "Diff";

#line default
#line hidden
            BeginContext(38, 219, true);
            WriteLiteral("\n\n<div class=\"row wrapper border-bottom white-bg page-heading\">\n    <div class=\"col-lg-10\">\n        <h2>Helper css classes</h2>\n        <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 257, "\"", 304, 1);
#line 12 "D:\RusCoffee\ASPNET_Core_2_1_Full_Project\ASPNET_Core_2_1\Views\UIElements\HelperClasses.cshtml"
WriteAttributeValue("", 264, Url.Action("Dashboard_1", "Dashboards"), 264, 40, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(305, 15957, true);
            WriteLiteral(@">Home</a>
            </li>
            <li class=""breadcrumb-item"">
                <a>Forms</a>
            </li>
            <li class=""active breadcrumb-item"">
                <strong>Helper css classes</strong>
            </li>
        </ol>
    </div>
    <div class=""col-lg-2"">
    </div>
</div>
<div class=""wrapper wrapper-content animated fadeIn"">
    <div class=""row"">
        <div class=""col-lg-6"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Contextual colors</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Example
                                </th>
                            </tr>
                        </thead>
            ");
            WriteLiteral(@"            <tbody>
                            <tr>
                                <td><code>.text-muted</code></td>
                                <td><span class=""text-muted"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-primary</code></td>
                                <td><span class=""text-primary"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-success</code></td>
                                <td><span class=""text-success"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-info</code></td>
                                <td><span class=""text-info"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-warning</code></td>
                     ");
            WriteLiteral(@"           <td><span class=""text-warning"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-danger</code></td>
                                <td><span class=""text-danger"">Example text</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Border radius</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Example
                                </th>
                            </tr>
                        </thead>
 ");
            WriteLiteral(@"                       <tbody>
                            <tr>
                                <td><code>.b-r-xs</code></td>
                                <td><div class=""bg-primary p-xs b-r-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.b-r-sm</code></td>
                                <td><div class=""bg-primary p-xs b-r-sm""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.b-r-md</code></td>
                                <td><div class=""bg-primary p-xs b-r-md""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.b-r-lg</code></td>
                                <td><div class=""bg-primary p-xs b-r-lg""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.b-r-xl</code>");
            WriteLiteral(@"</td>
                                <td><div class=""bg-primary p-xs b-r-xl""> Example text</div></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Hr Line</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Example
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Standard <code>&lt;hr&gt;</code></td>
                                <td><hr> </td>
      ");
            WriteLiteral(@"                      </tr>
                            <tr>
                                <td><code>.hr-line-dashed</code></td>
                                <td><hr class=""hr-line-dashed""> </td>
                            </tr>
                            <tr>
                                <td><code>.hr-line-solid</code></td>
                                <td><hr class=""hr-line-solid""></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Paddings</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Ex");
            WriteLiteral(@"ample
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>.p-xxs</code></td>
                                <td><div class=""p-xxs bg-muted""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.p-xs</code></td>
                                <td><div class=""p-xs bg-muted""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.p-sm</code></td>
                                <td><div class=""p-sm bg-muted""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.p-md</code></td>
                                <td><div class=""p-md bg-muted""> Example text</div></td>
                            </tr>
                   ");
            WriteLiteral(@"         <tr>
                                <td><code>.p-lg</code></td>
                                <td><div class=""p-lg bg-muted""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.p-xl</code></td>
                                <td><div class=""p-xl bg-muted""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.no-paddings</code><br /><small class=""text-muted"">remove all paddings</small> </td>
                                <td><div class=""no-padding bg-muted""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.p-w-(xs,sm,md,lg,xl)</code><br /><small>padding width</small></td>
                                <td><div class=""p-w-md bg-muted""> Example text</div></td>
                            </tr>
                            <tr>
                         ");
            WriteLiteral(@"       <td><code>.p-h-(xs,sm,md,lg,xl)</code><br /><small>height width</small></td>
                                <td><div class=""p-h-md bg-muted""> Example text</div></td>
                            </tr>

                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Borders</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Example
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>.border-left<");
            WriteLiteral(@"/code></td>
                                <td><div class=""p-xs border-left""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.border-right</code></td>
                                <td><div class=""p-xs border-right""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.border-top</code></td>
                                <td><div class=""p-xs border-top""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.border-bottom</code></td>
                                <td><div class=""p-xs border-bottom""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.no-borders</code><br /><small class=""text-muted"">remove all borders</small> </td>
                                <td><div class=""p-");
            WriteLiteral(@"xs no-borders""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.border-left-right</code></td>
                                <td><div class=""p-xs border-left-right""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.border-top-bottom</code></td>
                                <td><div class=""p-xs border-top-bottom""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.border-size-(sm,md,lg,xl)</code></td>
                                <td><div class=""p-xs border-top-bottom border-left-right border-size-lg""> Example text</div></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <");
            WriteLiteral(@"h5>Width, height</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Description
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>.h-150</code></td>
                                <td>min-height: 150px; </td>
                            </tr>
                            <tr>
                                <td><code>.h-200</code></td>
                                <td>min-height: 200px;</td>
                            </tr>
                            <tr>
                                <td><code>.h-300</code></td>
              ");
            WriteLiteral(@"                  <td>min-height: 300px;</td>
                            </tr>
                            <tr>
                                <td><code>.w-150</code></td>
                                <td>min-width: 150px; </td>
                            </tr>
                            <tr>
                                <td><code>.w-200</code></td>
                                <td>min-width: 200px;</td>
                            </tr>
                            <tr>
                                <td><code>.w-300</code></td>
                                <td>min-width: 300px;</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class=""col-lg-6"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Contextual backgrounds</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">");
            WriteLiteral(@"
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Example
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>.bg-muted</code></td>
                                <td><div class=""bg-muted p-xs b-r-sm""> Example text</div> </td>
                            </tr>
                            <tr>
                                <td><code>.bg-primary</code></td>
                                <td><div class=""bg-primary p-xs b-r-sm""> Example text</div> </td>
                            </tr>
                            <tr>
                                <td><code>.bg-success</code></td>
                                <td><div class=""bg-success p-");
            WriteLiteral(@"xs b-r-sm""> Example text</div> </td>
                            </tr>
                            <tr>
                                <td><code>.bg-info</code></td>
                                <td><div class=""bg-info p-xs b-r-sm""> Example text</div> </td>
                            </tr>
                            <tr>
                                <td><code>.bg-warning</code></td>
                                <td><div class=""bg-warning p-xs b-r-sm""> Example text</div> </td>
                            </tr>
                            <tr>
                                <td><code>.bg-danger</code></td>
                                <td><div class=""bg-danger p-xs b-r-sm""> Example text</div> </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Images</h5>
                </div>
                <div class=""ibox");
            WriteLiteral(@"-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Example
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>.rounded-circle</code></td>
                                <td>");
            EndContext();
            BeginContext(16262, 59, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2ec7f140064f401c9088541d63184cff", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16321, 173, true);
            WriteLiteral(" </td>\n                            </tr>\n                            <tr>\n                                <td><code>.rounded</code></td>\n                                <td>");
            EndContext();
            BeginContext(16494, 52, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1dcd6537f50549f4aa2fc1781f3d9755", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16546, 178, true);
            WriteLiteral("</td>\n                            </tr>\n                            <tr>\n                                <td><code>.img-thumbnail</code></td>\n                                <td>");
            EndContext();
            BeginContext(16724, 58, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "9f96a45c49214de4a1a12f17bdec5653", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16782, 171, true);
            WriteLiteral("</td>\n                            </tr>\n                            <tr>\n                                <td><code>.img-sm</code></td>\n                                <td>");
            EndContext();
            BeginContext(16953, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3d5fd65705ba4e2c931346370d465839", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16997, 171, true);
            WriteLiteral("</td>\n                            </tr>\n                            <tr>\n                                <td><code>.img-md</code></td>\n                                <td>");
            EndContext();
            BeginContext(17168, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "bd07fb34eacd4655ace3e9e156b381f6", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17212, 171, true);
            WriteLiteral("</td>\n                            </tr>\n                            <tr>\n                                <td><code>.img-lg</code></td>\n                                <td>");
            EndContext();
            BeginContext(17383, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "07d2227f90434df2be0805be396bb842", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17427, 8350, true);
            WriteLiteral(@"</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Basic font width</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Description
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>.font-normal</code></td>
                                <td><span class=""font-normal"">Example text</span> </td>
                            </tr>
                      ");
            WriteLiteral(@"      <tr>
                                <td><code>.font-bold</code></td>
                                <td><span class=""font-bold"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.font-italic</code></td>
                                <td><span class=""font-italic"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-uppercase</code></td>
                                <td><span class=""text-uppercase"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-lowercase</code></td>
                                <td><span class=""text-lowercase"">Example text</span></td>
                            </tr>
                            <tr>
                                <td><code>.text-capitalize</code></td>
                                <td><span class=""t");
            WriteLiteral(@"ext-capitalize"">Example text</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <h5>Margins</h5>
                </div>
                <div class=""ibox-content"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th>
                                    Class name
                                </th>
                                <th>
                                    Example
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>.m-xxs</code></td>
                                <td><div class=""m-xxs bg-muted p-xs""> Example text</div></td>
                            </tr>
");
            WriteLiteral(@"                            <tr>
                                <td><code>.m-xs</code></td>
                                <td><div class=""m-xs bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-sm</code></td>
                                <td><div class=""m-sm bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-md</code></td>
                                <td><div class=""m-md bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-lg</code></td>
                                <td><div class=""m-lg bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-xl</code></td>
                                <td><div class=""m-x");
            WriteLiteral(@"l bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-n</code></td>
                                <td><div class=""m-n bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-l / m-l-(xs,sm,md,lg,xl)</code><br /><small>margin left</small></td>
                                <td><div class=""m-l bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-l-n / m-l-n-(xs,sm,md,lg,xl)</code><br /><small>margin left negative</small></td>
                                <td><div class=""m-l-n bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-l-none</code><br /><small>clear margin left</small></td>
                                <t");
            WriteLiteral(@"d><div class=""m-l-none bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-t / m-t-(xs,sm,md,lg,xl)</code><br /><small>margin top</small></td>
                                <td><div class=""m-t bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-t-n / m-t-n-(xs,sm,md,lg,xl)</code><br /><small>margin top negative</small></td>
                                <td><div class=""m-t-n bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-t-none</code><br /><small>clear margin top</small></td>
                                <td><div class=""m-t-none bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-r / m-r-(xs,sm,md,lg,xl)<");
            WriteLiteral(@"/code><br /><small>margin right</small></td>
                                <td><div class=""m-r bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-r-n / m-r-n-(xs,sm,md,lg,xl)</code><br /><small>margin right negative</small></td>
                                <td><div class=""m-r-n bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-r-none</code><br /><small>clear margin right</small></td>
                                <td><div class=""m-r-none bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-b / m-b-(xs,sm,md,lg,xl)</code><br /><small>margin bottom</small></td>
                                <td><div class=""m-b bg-muted p-xs""> Example text</div></td>
                            </tr>
                      ");
            WriteLiteral(@"      <tr>
                                <td><code>.m-b-n / m-b-n-(xs,sm,md,lg,xl)</code><br /><small>margin bottom negative</small></td>
                                <td><div class=""m-b-n bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.m-b-none</code><br /><small>clear margin bottom</small></td>
                                <td><div class=""m-b-none bg-muted p-xs""> Example text</div></td>
                            </tr>
                            <tr>
                                <td><code>.no-margins</code><br /><small>remove all margins</small></td>
                                <td><div class=""no-margins bg-muted p-xs""> Example text</div></td>
                            </tr>

                        </tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>
    <div class=""footer"">
        <div class=""float-right"">
            10GB of <stron");
            WriteLiteral("g>250GB</strong> Free.\n        </div>\n        <div>\n            <strong>Copyright</strong> Example Company &copy; 2014-2015\n        </div>\n    </div>\n</div>\n\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
